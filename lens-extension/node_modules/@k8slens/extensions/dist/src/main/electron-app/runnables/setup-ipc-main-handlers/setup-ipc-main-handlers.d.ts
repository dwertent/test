import { ClusterStore } from "../../../../common/cluster-store/cluster-store";
import type { CatalogEntityRegistry } from "../../../catalog";
import type { ClusterManager } from "../../../cluster-manager";
import type { IComputedValue } from "mobx";
import type { GetAbsolutePath } from "../../../../common/path/get-absolute-path.injectable";
import type { MenuItemOpts } from "../../../menu/application-menu-items.injectable";
import type { Theme } from "../../../theme/operating-system-theme-state.injectable";
import type { AskUserForFilePaths } from "../../../ipc/ask-user-for-file-paths.injectable";
interface Dependencies {
    directoryForLensLocalStorage: string;
    getAbsolutePath: GetAbsolutePath;
    applicationMenuItems: IComputedValue<MenuItemOpts[]>;
    clusterManager: ClusterManager;
    catalogEntityRegistry: CatalogEntityRegistry;
    clusterStore: ClusterStore;
    operatingSystemTheme: IComputedValue<Theme>;
    askUserForFilePaths: AskUserForFilePaths;
}
export declare const setupIpcMainHandlers: ({ applicationMenuItems, directoryForLensLocalStorage, getAbsolutePath, clusterManager, catalogEntityRegistry, clusterStore, operatingSystemTheme, askUserForFilePaths }: Dependencies) => void;
export {};
