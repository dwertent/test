/**
 * Copyright (c) OpenLens Authors. All rights reserved.
 * Licensed under MIT License. See LICENSE in root directory for more information.
 */
import type { Cluster } from "../common/cluster/cluster";
import type { KubernetesObject } from "@kubernetes/client-node";
import type { Patch } from "rfc6902";
export declare class ResourceApplier {
    protected cluster: Cluster;
    constructor(cluster: Cluster);
    /**
     * Patch a kube resource's manifest, throwing any error that occurs.
     * @param name The name of the kube resource
     * @param kind The kind of the kube resource
     * @param patch The list of JSON operations
     * @param ns The optional namespace of the kube resource
     */
    patch(name: string, kind: string, patch: Patch, ns?: string): Promise<string>;
    apply(resource: KubernetesObject | any): Promise<string>;
    protected kubectlApply(content: string): Promise<string>;
    kubectlApplyAll(resources: string[], extraArgs?: string[]): Promise<string>;
    kubectlDeleteAll(resources: string[], extraArgs?: string[]): Promise<string>;
    protected kubectlCmdAll(subCmd: string, resources: string[], args?: string[]): Promise<string>;
    protected sanitizeObject(resource: KubernetesObject | any): any;
}
