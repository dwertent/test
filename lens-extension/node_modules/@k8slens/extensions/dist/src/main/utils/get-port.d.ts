/**
 * Copyright (c) OpenLens Authors. All rights reserved.
 * Licensed under MIT License. See LICENSE in root directory for more information.
 */
/// <reference types="node" />
import type { Readable } from "stream";
interface GetPortArgs {
    /**
     * Should be case insensitive
     * Must have a named matching group called `address`
     */
    lineRegex: {
        match: (line: string) => {
            matched: boolean;
            groups?: {
                address?: string;
            };
            raw?: RegExpExecArray;
        };
        rawMatcher: string;
    };
    /**
     * Called when the port is found
     */
    onFind?: () => void;
    /**
     * Timeout for how long to wait for the port.
     * Default: 15s
     */
    timeout?: number;
}
/**
 * Parse lines from `stream` (assumes data comes in lines) to find the port
 * which the source of the stream is watching on.
 * @param stream A readable stream to match lines against
 * @param args The args concerning the stream
 * @returns A Promise for port number
 */
export declare function getPortFrom(stream: Readable, args: GetPortArgs): Promise<number>;
export {};
