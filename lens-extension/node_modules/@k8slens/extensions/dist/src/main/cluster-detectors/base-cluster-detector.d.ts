/**
 * Copyright (c) OpenLens Authors. All rights reserved.
 * Licensed under MIT License. See LICENSE in root directory for more information.
 */
import type { RequestPromiseOptions } from "request-promise-native";
import type { Cluster } from "../../common/cluster/cluster";
import type { K8sRequest } from "../k8s-request.injectable";
export interface ClusterDetectionResult {
    value: string | number | boolean;
    accuracy: number;
}
export declare abstract class BaseClusterDetector {
    readonly cluster: Cluster;
    private _k8sRequest;
    abstract readonly key: string;
    constructor(cluster: Cluster, _k8sRequest: K8sRequest);
    abstract detect(): Promise<ClusterDetectionResult | null>;
    protected k8sRequest<T = any>(path: string, options?: RequestPromiseOptions): Promise<T>;
}
