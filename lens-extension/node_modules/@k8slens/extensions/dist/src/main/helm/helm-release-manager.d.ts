/**
 * Copyright (c) OpenLens Authors. All rights reserved.
 * Licensed under MIT License. See LICENSE in root directory for more information.
 */
import type { JsonObject, JsonValue } from "type-fest";
export declare function listReleases(pathToKubeconfig: string, namespace?: string): Promise<Record<string, any>[]>;
export declare function installChart(chart: string, values: JsonValue, name: string | undefined, namespace: string, version: string, kubeconfigPath: string): Promise<{
    log: string;
    release: {
        name: string;
        namespace: string;
    };
}>;
export declare function upgradeRelease(name: string, chart: string, values: any, namespace: string, version: string, kubeconfigPath: string, kubectlPath: string): Promise<{
    log: string;
    release: JsonObject | undefined;
}>;
export declare function getRelease(name: string, namespace: string, kubeconfigPath: string, kubectlPath: string): Promise<JsonObject | undefined>;
export declare function deleteRelease(name: string, namespace: string, kubeconfigPath: string): Promise<string>;
interface GetValuesOptions {
    namespace: string;
    all?: boolean;
    kubeconfigPath: string;
}
export declare function getValues(name: string, { namespace, all, kubeconfigPath }: GetValuesOptions): Promise<string>;
export declare function getHistory(name: string, namespace: string, kubeconfigPath: string): Promise<JsonValue>;
export declare function rollback(name: string, namespace: string, revision: number, kubeconfigPath: string): Promise<void>;
export {};
