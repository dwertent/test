/**
 * Copyright (c) OpenLens Authors. All rights reserved.
 * Licensed under MIT License. See LICENSE in root directory for more information.
 */
import type { RepoHelmChartList } from "../../common/k8s-api/endpoints/helm-charts.api";
import type { SetRequired } from "type-fest";
import type { HelmRepo } from "../../common/helm/helm-repo";
export interface HelmCacheFile {
    apiVersion: string;
    entries: RepoHelmChartList;
}
export declare class HelmChartManager {
    #private;
    protected readonly repo: SetRequired<HelmRepo, "cacheFilePath">;
    private constructor();
    static forRepo(repo: HelmRepo): HelmChartManager;
    chartVersions(name: string): Promise<import("../../common/k8s-api/endpoints/helm-charts.api").RawHelmChart[]>;
    charts(): Promise<RepoHelmChartList>;
    private executeCommand;
    getReadme(name: string, version?: string): Promise<string>;
    getValues(name: string, version?: string): Promise<string>;
    protected updateYamlCache(): Promise<{
        data: string;
        mtimeMs: number;
    }>;
    protected cachedYaml(): Promise<RepoHelmChartList>;
}
