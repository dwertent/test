/// <reference types="node" />
import type { ChildProcessWithoutNullStreams } from "child_process";
export interface PortForwardArgs {
    clusterId: string;
    kind: string;
    namespace: string;
    name: string;
    port: number;
    forwardPort: number;
}
interface Dependencies {
    getKubectlBinPath: (bundled: boolean) => Promise<string>;
}
export declare class PortForward {
    private dependencies;
    pathToKubeConfig: string;
    static portForwards: PortForward[];
    static getPortforward(forward: PortForwardArgs): PortForward | undefined;
    process?: ChildProcessWithoutNullStreams;
    clusterId: string;
    kind: string;
    namespace: string;
    name: string;
    port: number;
    forwardPort: number;
    constructor(dependencies: Dependencies, pathToKubeConfig: string, args: PortForwardArgs);
    start(): Promise<boolean>;
    stop(): Promise<void>;
}
export {};
