/**
 * Copyright (c) OpenLens Authors. All rights reserved.
 * Licensed under MIT License. See LICENSE in root directory for more information.
 */
/// <reference types="node" />
/// <reference types="node" />
import type { ChildProcess } from "child_process";
import type { Cluster } from "../../common/cluster/cluster";
import type { SelfSignedCert } from "selfsigned";
import type { Spawn } from "../child-process/spawn.injectable";
import type { Logger } from "../../common/logger";
export interface KubeAuthProxyDependencies {
    readonly proxyBinPath: string;
    readonly proxyCert: SelfSignedCert;
    spawn: Spawn;
    readonly logger: Logger;
}
export declare class KubeAuthProxy {
    private readonly dependencies;
    protected readonly cluster: Cluster;
    protected readonly env: NodeJS.ProcessEnv;
    readonly apiPrefix: string;
    get port(): number;
    protected _port?: number;
    protected proxyProcess?: ChildProcess;
    protected ready: boolean;
    constructor(dependencies: KubeAuthProxyDependencies, cluster: Cluster, env: NodeJS.ProcessEnv);
    get whenReady(): Promise<void> & {
        cancel(): void;
    };
    run(): Promise<void>;
    exit(): void;
}
