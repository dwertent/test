/**
 * Copyright (c) OpenLens Authors. All rights reserved.
 * Licensed under MIT License. See LICENSE in root directory for more information.
 */
import type React from "react";
import type { Disposer } from "../../common/utils";
import type { CatalogEntity } from "../common-api/catalog";
import { BaseRegistry } from "./base-registry";
export interface CatalogEntityDetailsProps<T extends CatalogEntity> {
    entity: T;
}
export interface CatalogEntityDetailComponents<T extends CatalogEntity> {
    Details: React.ComponentType<CatalogEntityDetailsProps<T>>;
}
export interface CatalogEntityDetailRegistration<T extends CatalogEntity> {
    kind: string;
    apiVersions: string[];
    components: CatalogEntityDetailComponents<T>;
    priority?: number;
}
export declare class CatalogEntityDetailRegistry extends BaseRegistry<CatalogEntityDetailRegistration<CatalogEntity>> {
    add<T extends CatalogEntity>(items: CatalogEntityDetailRegistration<T> | CatalogEntityDetailRegistration<T>[]): Disposer;
    getItemsForKind(kind: string, apiVersion: string): CatalogEntityDetailRegistration<CatalogEntity<import("../common-api/catalog").CatalogEntityMetadata, import("../common-api/catalog").CatalogEntityStatus, import("../common-api/catalog").CatalogEntitySpec>>[];
}
