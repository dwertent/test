/**
 * Copyright (c) OpenLens Authors. All rights reserved.
 * Licensed under MIT License. See LICENSE in root directory for more information.
 */
import { BaseStore } from "../../../common/base-store";
interface FSProvisionModel {
    extensions: Record<string, string>;
}
interface Dependencies {
    directoryForExtensionData: string;
}
export declare class FileSystemProvisionerStore extends BaseStore<FSProvisionModel> {
    private dependencies;
    readonly displayName = "FilesystemProvisionerStore";
    registeredExtensions: import("mobx").ObservableMap<string, string>;
    constructor(dependencies: Dependencies);
    /**
     * This function retrieves the saved path to the folder which the extension
     * can saves files to. If the folder is not present then it is created.
     * @param extensionName the name of the extension requesting the path
     * @returns path to the folder that the extension can safely write files to.
     */
    requestDirectory(extensionName: string): Promise<string>;
    protected fromStore({ extensions }?: FSProvisionModel): void;
    toJSON(): FSProvisionModel;
}
export {};
