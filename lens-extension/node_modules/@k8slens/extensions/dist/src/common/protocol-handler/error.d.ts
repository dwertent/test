/**
 * Copyright (c) OpenLens Authors. All rights reserved.
 * Licensed under MIT License. See LICENSE in root directory for more information.
 */
import type Url from "url-parse";
export declare enum RoutingErrorType {
    INVALID_PROTOCOL = "invalid-protocol",
    INVALID_HOST = "invalid-host",
    INVALID_PATHNAME = "invalid-pathname",
    NO_HANDLER = "no-handler",
    NO_EXTENSION_ID = "no-ext-id",
    MISSING_EXTENSION = "missing-ext"
}
export declare class RoutingError<Query> extends Error {
    type: RoutingErrorType;
    url: Url<Query>;
    /**
     * Will be set if the routing error originated in an extension route table
     */
    extensionName?: string;
    constructor(type: RoutingErrorType, url: Url<Query>);
    toString(): string;
}
