declare const packageJsonInjectable: import("@ogre-tools/injectable").Injectable<{
    name: string;
    productName: string;
    description: string;
    homepage: string;
    version: string;
    main: string;
    copyright: string;
    license: string;
    author: {
        name: string;
        email: string;
    };
    scripts: {
        dev: string;
        "dev-build": string;
        "debug-build": string;
        "dev-run": string;
        "dev:main": string;
        "dev:renderer": string;
        compile: string;
        "compile:main": string;
        "compile:renderer": string;
        "compile:extension-types": string;
        "npm:fix-build-version": string;
        "npm:fix-package-version": string;
        "build:linux": string;
        "build:mac": string;
        "build:win": string;
        integration: string;
        "test:unit": string;
        "test:integration": string;
        dist: string;
        "dist:dir": string;
        "download:binaries": string;
        "build:tray-icons": string;
        "build:theme-vars": string;
        lint: string;
        "lint:fix": string;
        "mkdocs-serve-local": string;
        "verify-docs": string;
        "typedocs-extensions-api": string;
        "version-checkout": string;
        "version-commit": string;
        version: string;
        postversion: string;
    };
    config: {
        k8sProxyVersion: string;
        bundledKubectlVersion: string;
        bundledHelmVersion: string;
        sentryDsn: string;
        contentSecurityPolicy: string;
    };
    engines: {
        node: string;
    };
    jest: {
        collectCoverage: boolean;
        verbose: boolean;
        transform: {
            "^.+\\.(t|j)sx?$": string[];
        };
        testEnvironment: string;
        resolver: string;
        moduleNameMapper: {
            "\\.(css|scss)$": string;
            "\\.(svg|png|jpg|eot|woff2?|ttf)$": string;
        };
        modulePathIgnorePatterns: string[];
        setupFiles: string[];
        globalSetup: string;
        setupFilesAfterEnv: string[];
        runtime: string;
    };
    build: {
        generateUpdatesFilesForAllChannels: boolean;
        files: string[];
        afterSign: string;
        extraResources: (string | {
            from: string;
            to: string;
            filter: string;
        } | {
            from: string;
            to: string;
            filter: string[];
        })[];
        linux: {
            category: string;
            artifactName: string;
            target: string[];
            extraResources: {
                from: string;
                to: string;
            }[];
        };
        rpm: {
            fpm: string[];
        };
        mac: {
            hardenedRuntime: boolean;
            gatekeeperAssess: boolean;
            entitlements: string;
            entitlementsInherit: string;
            extraResources: {
                from: string;
                to: string;
            }[];
        };
        win: {
            target: string[];
            extraResources: {
                from: string;
                to: string;
            }[];
        };
        nsis: {
            include: string;
            oneClick: boolean;
            allowElevation: boolean;
            createStartMenuShortcut: boolean;
            allowToChangeInstallationDirectory: boolean;
        };
        protocols: {
            name: string;
            schemes: string[];
            role: string;
        };
    };
    dependencies: {
        "@astronautlabs/jsonpath": string;
        "@hapi/call": string;
        "@hapi/subtext": string;
        "@kubernetes/client-node": string;
        "@material-ui/styles": string;
        "@ogre-tools/fp": string;
        "@ogre-tools/injectable": string;
        "@ogre-tools/injectable-extension-for-auto-registration": string;
        "@ogre-tools/injectable-extension-for-mobx": string;
        "@ogre-tools/injectable-react": string;
        "@sentry/electron": string;
        "@sentry/integrations": string;
        "@side/jest-runtime": string;
        "@types/circular-dependency-plugin": string;
        "abort-controller": string;
        "auto-bind": string;
        "await-lock": string;
        byline: string;
        chokidar: string;
        conf: string;
        "crypto-js": string;
        "electron-devtools-installer": string;
        "electron-updater": string;
        "electron-window-state": string;
        filehound: string;
        "fs-extra": string;
        "glob-to-regexp": string;
        got: string;
        "grapheme-splitter": string;
        handlebars: string;
        history: string;
        "http-proxy": string;
        immer: string;
        joi: string;
        "js-yaml": string;
        jsdom: string;
        lodash: string;
        "mac-ca": string;
        marked: string;
        "md5-file": string;
        mobx: string;
        "mobx-observable-history": string;
        "mobx-react": string;
        "mobx-utils": string;
        "mock-fs": string;
        moment: string;
        "moment-timezone": string;
        "monaco-editor": string;
        "monaco-editor-webpack-plugin": string;
        "node-fetch": string;
        "node-pty": string;
        npm: string;
        "p-limit": string;
        "path-to-regexp": string;
        "proper-lockfile": string;
        react: string;
        "react-dom": string;
        "react-material-ui-carousel": string;
        "react-router": string;
        "react-virtualized-auto-sizer": string;
        "readable-stream": string;
        request: string;
        "request-promise-native": string;
        rfc6902: string;
        selfsigned: string;
        semver: string;
        "shell-env": string;
        spdy: string;
        tar: string;
        "tcp-port-used": string;
        tempy: string;
        "typed-regex": string;
        "url-parse": string;
        uuid: string;
        "win-ca": string;
        winston: string;
        "winston-console-format": string;
        "winston-transport-browserconsole": string;
        ws: string;
    };
    devDependencies: {
        "@async-fn/jest": string;
        "@material-ui/core": string;
        "@material-ui/icons": string;
        "@material-ui/lab": string;
        "@pmmmwh/react-refresh-webpack-plugin": string;
        "@sentry/types": string;
        "@swc/core": string;
        "@swc/jest": string;
        "@testing-library/dom": string;
        "@testing-library/jest-dom": string;
        "@testing-library/react": string;
        "@testing-library/user-event": string;
        "@types/byline": string;
        "@types/chart.js": string;
        "@types/circular-dependency-plugin": string;
        "@types/cli-progress": string;
        "@types/color": string;
        "@types/command-line-args": string;
        "@types/crypto-js": string;
        "@types/dompurify": string;
        "@types/electron-devtools-installer": string;
        "@types/fs-extra": string;
        "@types/glob-to-regexp": string;
        "@types/gunzip-maybe": string;
        "@types/hapi__call": string;
        "@types/hapi__subtext": string;
        "@types/html-webpack-plugin": string;
        "@types/http-proxy": string;
        "@types/jest": string;
        "@types/js-yaml": string;
        "@types/jsdom": string;
        "@types/lodash": string;
        "@types/marked": string;
        "@types/md5-file": string;
        "@types/mini-css-extract-plugin": string;
        "@types/mock-fs": string;
        "@types/node": string;
        "@types/node-fetch": string;
        "@types/npm": string;
        "@types/proper-lockfile": string;
        "@types/randomcolor": string;
        "@types/react": string;
        "@types/react-beautiful-dnd": string;
        "@types/react-dom": string;
        "@types/react-router": string;
        "@types/react-router-dom": string;
        "@types/react-table": string;
        "@types/react-virtualized-auto-sizer": string;
        "@types/react-window": string;
        "@types/readable-stream": string;
        "@types/request": string;
        "@types/request-promise-native": string;
        "@types/semver": string;
        "@types/sharp": string;
        "@types/spdy": string;
        "@types/tar": string;
        "@types/tar-stream": string;
        "@types/tcp-port-used": string;
        "@types/tempy": string;
        "@types/triple-beam": string;
        "@types/url-parse": string;
        "@types/uuid": string;
        "@types/webpack": string;
        "@types/webpack-dev-server": string;
        "@types/webpack-env": string;
        "@types/webpack-node-externals": string;
        "@typescript-eslint/eslint-plugin": string;
        "@typescript-eslint/parser": string;
        ansi_up: string;
        "chart.js": string;
        "circular-dependency-plugin": string;
        "cli-progress": string;
        color: string;
        "command-line-args": string;
        concurrently: string;
        "css-loader": string;
        deepdash: string;
        dompurify: string;
        electron: string;
        "electron-builder": string;
        "electron-notarize": string;
        esbuild: string;
        "esbuild-loader": string;
        eslint: string;
        "eslint-plugin-header": string;
        "eslint-plugin-import": string;
        "eslint-plugin-react": string;
        "eslint-plugin-react-hooks": string;
        "eslint-plugin-unused-imports": string;
        "flex.box": string;
        "fork-ts-checker-webpack-plugin": string;
        "gunzip-maybe": string;
        "html-webpack-plugin": string;
        "identity-obj-proxy": string;
        "ignore-loader": string;
        "include-media": string;
        jest: string;
        "jest-canvas-mock": string;
        "jest-environment-jsdom": string;
        "jest-fetch-mock": string;
        "jest-mock-extended": string;
        "make-plural": string;
        "mini-css-extract-plugin": string;
        "mock-http": string;
        "node-gyp": string;
        "node-loader": string;
        nodemon: string;
        playwright: string;
        postcss: string;
        "postcss-loader": string;
        randomcolor: string;
        "react-beautiful-dnd": string;
        "react-refresh": string;
        "react-refresh-typescript": string;
        "react-router-dom": string;
        "react-select": string;
        "react-select-event": string;
        "react-table": string;
        "react-window": string;
        sass: string;
        "sass-loader": string;
        sharp: string;
        "style-loader": string;
        tailwindcss: string;
        "tar-stream": string;
        "ts-loader": string;
        "ts-node": string;
        "type-fest": string;
        "typed-emitter": string;
        typedoc: string;
        "typedoc-plugin-markdown": string;
        typescript: string;
        "typescript-plugin-css-modules": string;
        webpack: string;
        "webpack-cli": string;
        "webpack-dev-server": string;
        "webpack-node-externals": string;
        xterm: string;
        "xterm-addon-fit": string;
    };
}, unknown, void>;
export default packageJsonInjectable;
