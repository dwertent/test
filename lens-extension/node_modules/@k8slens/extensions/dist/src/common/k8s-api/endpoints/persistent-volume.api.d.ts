/**
 * Copyright (c) OpenLens Authors. All rights reserved.
 * Licensed under MIT License. See LICENSE in root directory for more information.
 */
import type { ClusterScopedMetadata, LabelSelector, ObjectReference, TypedLocalObjectReference } from "../kube-object";
import { KubeObject } from "../kube-object";
import type { DerivedKubeApiOptions } from "../kube-api";
import { KubeApi } from "../kube-api";
import type { ResourceRequirements } from "./types/resource-requirements";
export interface PersistentVolumeSpec {
    /**
     * AccessModes contains the desired access modes the volume should have.
     *
     * More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#access-modes-1
     */
    accessModes?: string[];
    dataSource?: TypedLocalObjectReference;
    dataSourceRef?: TypedLocalObjectReference;
    resources?: ResourceRequirements;
    selector?: LabelSelector;
    /**
     * Name of the StorageClass required by the claim.
     *
     * More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#class-1
     */
    storageClassName?: string;
    /**
     * Defines what type of volume is required by the claim. Value of Filesystem is implied when not
     * included in claim spec.
     */
    volumeMode?: string;
    /**
     * A description of the persistent volume\'s resources and capacity.
     *
     * More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#capacity
     */
    capacity?: Partial<Record<string, string>>;
    flexVolume?: {
        driver: string;
        options: {
            clusterNamespace: string;
            image: string;
            pool: string;
            storageClass: string;
        };
    };
    mountOptions?: string[];
    claimRef?: ObjectReference;
    persistentVolumeReclaimPolicy?: string;
    nfs?: {
        path: string;
        server: string;
    };
}
export interface PersistentVolumeStatus {
    phase: string;
    reason?: string;
}
export declare class PersistentVolume extends KubeObject<ClusterScopedMetadata, PersistentVolumeStatus, PersistentVolumeSpec> {
    static kind: string;
    static namespaced: boolean;
    static apiBase: string;
    getCapacity(inBytes?: boolean): string | number;
    getStatus(): string;
    getStorageClass(): string;
    getClaimRefName(): string;
    getStorageClassName(): string;
}
export declare class PersistentVolumeApi extends KubeApi<PersistentVolume> {
    constructor(opts?: DerivedKubeApiOptions);
}
