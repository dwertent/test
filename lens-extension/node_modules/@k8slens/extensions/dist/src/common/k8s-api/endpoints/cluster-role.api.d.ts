/**
 * Copyright (c) OpenLens Authors. All rights reserved.
 * Licensed under MIT License. See LICENSE in root directory for more information.
 */
import type { DerivedKubeApiOptions } from "../kube-api";
import { KubeApi } from "../kube-api";
import type { KubeJsonApiData } from "../kube-json-api";
import type { ClusterScopedMetadata, KubeObjectMetadata, KubeObjectScope } from "../kube-object";
import { KubeObject } from "../kube-object";
import type { AggregationRule } from "./types/aggregation-rule";
import type { PolicyRule } from "./types/policy-rule";
export interface ClusterRoleData extends KubeJsonApiData<KubeObjectMetadata<KubeObjectScope.Cluster>, void, void> {
    rules?: PolicyRule[];
    aggregationRule?: AggregationRule;
}
export declare class ClusterRole extends KubeObject<ClusterScopedMetadata, void, void> {
    static kind: string;
    static namespaced: boolean;
    static apiBase: string;
    rules?: PolicyRule[];
    aggregationRule?: AggregationRule;
    constructor({ rules, aggregationRule, ...rest }: ClusterRoleData);
    getRules(): PolicyRule[];
}
export declare class ClusterRoleApi extends KubeApi<ClusterRole, ClusterRoleData> {
    constructor(opts?: DerivedKubeApiOptions);
}
