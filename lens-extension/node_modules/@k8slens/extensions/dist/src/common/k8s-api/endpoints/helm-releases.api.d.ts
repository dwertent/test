/**
 * Copyright (c) OpenLens Authors. All rights reserved.
 * Licensed under MIT License. See LICENSE in root directory for more information.
 */
import type { ItemObject } from "../../item.store";
import type { JsonApiData } from "../json-api";
import type { HelmReleaseDetails } from "../../../renderer/components/+helm-releases/release-details/release-details-model/call-for-helm-release/call-for-helm-release-details/call-for-helm-release-details.injectable";
export interface HelmReleaseUpdateDetails {
    log: string;
    release: HelmReleaseDetails;
}
export interface HelmReleaseRevision {
    revision: number;
    updated: string;
    status: string;
    chart: string;
    app_version: string;
    description: string;
}
declare type EndpointParams = {} | {
    namespace: string;
} | {
    namespace: string;
    name: string;
} | {
    namespace: string;
    name: string;
    route: string;
};
interface EndpointQuery {
    all?: boolean;
}
export declare const endpoint: (params?: EndpointParams | undefined, query?: EndpointQuery | undefined, fragment?: string | undefined) => string;
export declare function deleteRelease(name: string, namespace: string): Promise<JsonApiData>;
export declare function getReleaseValues(name: string, namespace: string, all?: boolean): Promise<string>;
export declare function getReleaseHistory(name: string, namespace: string): Promise<HelmReleaseRevision[]>;
export declare function rollbackRelease(name: string, namespace: string, revision: number): Promise<JsonApiData>;
export interface HelmReleaseDto {
    appVersion: string;
    name: string;
    namespace: string;
    chart: string;
    status: string;
    updated: string;
    revision: string;
}
export interface HelmRelease extends HelmReleaseDto, ItemObject {
    getNs: () => string;
    getChart: (withVersion?: boolean) => string;
    getRevision: () => number;
    getStatus: () => string;
    getVersion: () => string;
    getUpdated: (humanize?: boolean, compact?: boolean) => string | number;
    getRepo: () => Promise<string>;
}
export {};
