/**
 * Copyright (c) OpenLens Authors. All rights reserved.
 * Licensed under MIT License. See LICENSE in root directory for more information.
 */
import { KubeObject } from "../kube-object";
import type { DerivedKubeApiOptions, IgnoredKubeApiOptions } from "../kube-api";
import { KubeApi } from "../kube-api";
export declare class SelfSubjectRulesReviewApi extends KubeApi<SelfSubjectRulesReview> {
    constructor(opts?: DerivedKubeApiOptions & IgnoredKubeApiOptions);
    create({ namespace }: {
        namespace?: string | undefined;
    }): Promise<SelfSubjectRulesReview | null>;
}
export interface ISelfSubjectReviewRule {
    verbs: string[];
    apiGroups?: string[];
    resources?: string[];
    resourceNames?: string[];
    nonResourceURLs?: string[];
}
export interface SelfSubjectRulesReview {
    spec: {
        namespace?: string;
    };
    status: {
        resourceRules: ISelfSubjectReviewRule[];
        nonResourceRules: ISelfSubjectReviewRule[];
        incomplete: boolean;
    };
}
export declare class SelfSubjectRulesReview extends KubeObject {
    static kind: string;
    static namespaced: boolean;
    static apiBase: string;
    getResourceRules(): ISelfSubjectReviewRule[];
    getNonResourceRules(): ISelfSubjectReviewRule[];
    protected normalize(rule: ISelfSubjectReviewRule): ISelfSubjectReviewRule;
}
