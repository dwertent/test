/**
 * Copyright (c) OpenLens Authors. All rights reserved.
 * Licensed under MIT License. See LICENSE in root directory for more information.
 */
import type { KubeObjectStore } from "../kube-object.store";
import type { KubeApi } from "../kube-api";
import type { KubeJsonApiDataFor, KubeObject, ObjectReference } from "../kube-object";
export declare type RegisterableStore<Store> = Store extends KubeObjectStore<any, any, any> ? Store : never;
export declare type RegisterableApi<Api> = Api extends KubeApi<any, any> ? Api : never;
export declare type KubeObjectStoreFrom<Api> = Api extends KubeApi<infer KubeObj, infer ApiData> ? KubeObjectStore<KubeObj, Api, ApiData> : never;
export declare class ApiManager {
    private readonly apis;
    private readonly stores;
    constructor();
    getApi(pathOrCallback: string | ((api: KubeApi<KubeObject>) => boolean)): KubeApi<KubeObject<import("../kube-object").KubeObjectMetadata<import("../kube-object").KubeObjectScope>, unknown, unknown>, import("../kube-json-api").KubeJsonApiData<import("../kube-object").KubeObjectMetadata<import("../kube-object").KubeObjectScope>, unknown, unknown>> | undefined;
    getApiByKind(kind: string, apiVersion: string): KubeApi<KubeObject<import("../kube-object").KubeObjectMetadata<import("../kube-object").KubeObjectScope>, unknown, unknown>, import("../kube-json-api").KubeJsonApiData<import("../kube-object").KubeObjectMetadata<import("../kube-object").KubeObjectScope>, unknown, unknown>> | undefined;
    registerApi<Api>(api: RegisterableApi<Api>): void;
    /**
     * @deprecated Just register the `api` by itself
     */
    registerApi<Api>(apiBase: string, api: RegisterableApi<Api>): void;
    protected resolveApi(api: undefined | string | KubeApi): KubeApi | undefined;
    unregisterApi(api: string | KubeApi<KubeObject>): void;
    registerStore<KubeObj>(store: RegisterableStore<KubeObj>): void;
    /**
     * @deprecated KubeObjectStore's should only every be about a single KubeApi type
     */
    registerStore<KubeObj extends KubeObject>(store: KubeObjectStore<KubeObj, KubeApi<KubeObj>, KubeJsonApiDataFor<KubeObj>>, apis: KubeApi<KubeObj>[]): void;
    getStore(api: string | undefined): KubeObjectStore | undefined;
    getStore<Api>(api: RegisterableApi<Api>): KubeObjectStoreFrom<Api> | undefined;
    /**
     * @deprecated use an actual cast instead of hiding it with this unused type param
     */
    getStore<Store extends KubeObjectStore>(api: string | KubeApi): Store | undefined;
    lookupApiLink(ref: ObjectReference, parentObject?: KubeObject): string;
}
