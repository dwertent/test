/**
 * Copyright (c) OpenLens Authors. All rights reserved.
 * Licensed under MIT License. See LICENSE in root directory for more information.
 */
import type { BaseKubeObjectCondition, LabelSelector, NamespaceScopedMetadata } from "../kube-object";
import { KubeObject } from "../kube-object";
import type { DerivedKubeApiOptions } from "../kube-api";
import { KubeApi } from "../kube-api";
import type { OptionVarient } from "../../utils";
export declare enum HpaMetricType {
    Resource = "Resource",
    Pods = "Pods",
    Object = "Object",
    External = "External",
    ContainerResource = "ContainerResource"
}
export interface HorizontalPodAutoscalerMetricTarget {
    kind: string;
    name: string;
    apiVersion: string;
}
export interface ContainerResourceMetricSource {
    container: string;
    name: string;
    targetAverageUtilization?: number;
    targetAverageValue?: string;
}
export interface ExternalMetricSource {
    metricName: string;
    metricSelector?: LabelSelector;
    targetAverageValue?: string;
    targetValue?: string;
}
export interface ObjectMetricSource {
    averageValue?: string;
    metricName: string;
    selector?: LabelSelector;
    target: CrossVersionObjectReference;
    targetValue: string;
}
export interface PodsMetricSource {
    metricName: string;
    selector?: LabelSelector;
    targetAverageValue: string;
}
export interface ResourceMetricSource {
    name: string;
    targetAverageUtilization?: number;
    targetAverageValue?: string;
}
export interface BaseHorizontalPodAutoscalerMetricSpec {
    resource: ResourceMetricSource;
    object: ObjectMetricSource;
    external: ExternalMetricSource;
    pods: PodsMetricSource;
    containerResource: ContainerResourceMetricSource;
}
export declare type HorizontalPodAutoscalerMetricSpec = OptionVarient<HpaMetricType.Resource, BaseHorizontalPodAutoscalerMetricSpec, "resource"> | OptionVarient<HpaMetricType.External, BaseHorizontalPodAutoscalerMetricSpec, "external"> | OptionVarient<HpaMetricType.Object, BaseHorizontalPodAutoscalerMetricSpec, "object"> | OptionVarient<HpaMetricType.Pods, BaseHorizontalPodAutoscalerMetricSpec, "pods"> | OptionVarient<HpaMetricType.ContainerResource, BaseHorizontalPodAutoscalerMetricSpec, "containerResource">;
export interface CrossVersionObjectReference {
    kind: string;
    name: string;
    apiVersion: string;
}
export interface HorizontalPodAutoscalerSpec {
    scaleTargetRef: CrossVersionObjectReference;
    minReplicas?: number;
    maxReplicas: number;
    metrics?: HorizontalPodAutoscalerMetricSpec[];
}
export interface HorizontalPodAutoscalerStatus {
    conditions?: BaseKubeObjectCondition[];
    currentReplicas: number;
    desiredReplicas: number;
    currentMetrics: HorizontalPodAutoscalerMetricSpec[];
}
interface MetricCurrentTarget {
    current?: string;
    target?: string;
}
export declare class HorizontalPodAutoscaler extends KubeObject<NamespaceScopedMetadata, HorizontalPodAutoscalerStatus, HorizontalPodAutoscalerSpec> {
    static readonly kind = "HorizontalPodAutoscaler";
    static readonly namespaced = true;
    static readonly apiBase = "/apis/autoscaling/v2beta1/horizontalpodautoscalers";
    getMaxPods(): number;
    getMinPods(): number;
    getReplicas(): number;
    getReadyConditions(): {
        isReady: boolean;
        tooltip: string;
        lastTransitionTime?: string | undefined;
        message?: string | undefined;
        reason?: string | undefined;
        status: "True" | "False" | "Unknown";
        type: string;
    }[];
    getConditions(): {
        isReady: boolean;
        tooltip: string;
        lastTransitionTime?: string | undefined;
        message?: string | undefined;
        reason?: string | undefined;
        status: "True" | "False" | "Unknown";
        type: string;
    }[];
    getMetrics(): HorizontalPodAutoscalerMetricSpec[];
    getCurrentMetrics(): HorizontalPodAutoscalerMetricSpec[];
    protected getMetricName(metric: HorizontalPodAutoscalerMetricSpec): string;
    protected getResourceMetricValue(currentMetric: ResourceMetricSource | undefined, targetMetric: ResourceMetricSource): MetricCurrentTarget;
    protected getPodsMetricValue(currentMetric: PodsMetricSource | undefined, targetMetric: PodsMetricSource): MetricCurrentTarget;
    protected getObjectMetricValue(currentMetric: ObjectMetricSource | undefined, targetMetric: ObjectMetricSource): MetricCurrentTarget;
    protected getExternalMetricValue(currentMetric: ExternalMetricSource | undefined, targetMetric: ExternalMetricSource): MetricCurrentTarget;
    protected getContainerResourceMetricValue(currentMetric: ContainerResourceMetricSource | undefined, targetMetric: ContainerResourceMetricSource): MetricCurrentTarget;
    protected getMetricCurrentTarget(metric: HorizontalPodAutoscalerMetricSpec): MetricCurrentTarget;
    getMetricValues(metric: HorizontalPodAutoscalerMetricSpec): string;
}
export declare class HorizontalPodAutoscalerApi extends KubeApi<HorizontalPodAutoscaler> {
    constructor(opts?: DerivedKubeApiOptions);
}
export {};
