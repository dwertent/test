/**
 * Copyright (c) OpenLens Authors. All rights reserved.
 * Licensed under MIT License. See LICENSE in root directory for more information.
 */
import type { KubeObjectMetadata, ObjectReference } from "../kube-object";
import { KubeObject } from "../kube-object";
import type { DerivedKubeApiOptions } from "../kube-api";
import { KubeApi } from "../kube-api";
import type { KubeJsonApiData } from "../kube-json-api";
export interface EventSeries {
    count?: number;
    lastObservedTime?: string;
}
export interface EventSource {
    component?: string;
    host?: string;
}
export interface KubeEventData extends KubeJsonApiData<KubeObjectMetadata, void, void> {
    action?: string;
    count?: number;
    eventTime?: string;
    firstTimestamp?: string;
    involvedObject: Required<ObjectReference>;
    lastTimestamp?: string;
    message?: string;
    reason?: string;
    related?: ObjectReference;
    reportingComponent?: string;
    reportingInstance?: string;
    series?: EventSeries;
    source?: EventSource;
    type?: string;
}
export declare class KubeEvent extends KubeObject {
    static kind: string;
    static namespaced: boolean;
    static apiBase: string;
    action?: string;
    count?: number;
    eventTime?: string;
    firstTimestamp?: string;
    involvedObject: Required<ObjectReference>;
    lastTimestamp?: string;
    message?: string;
    reason?: string;
    related?: ObjectReference;
    reportingComponent?: string;
    reportingInstance?: string;
    series?: EventSeries;
    source?: EventSource;
    /**
     * Current supported values are:
     * - "Normal"
     * - "Warning"
     */
    type?: string;
    constructor({ action, count, eventTime, firstTimestamp, involvedObject, lastTimestamp, message, reason, related, reportingComponent, reportingInstance, series, source, type, ...rest }: KubeEventData);
    isWarning(): boolean;
    getSource(): string;
    /**
     * @deprecated This function is not reactive to changing of time. If rendering use `<ReactiveDuration />` instead
     */
    getFirstSeenTime(): string;
    /**
     * @deprecated This function is not reactive to changing of time. If rendering use `<ReactiveDuration />` instead
     */
    getLastSeenTime(): string;
}
export declare class KubeEventApi extends KubeApi<KubeEvent, KubeEventData> {
    constructor(opts?: DerivedKubeApiOptions);
}
