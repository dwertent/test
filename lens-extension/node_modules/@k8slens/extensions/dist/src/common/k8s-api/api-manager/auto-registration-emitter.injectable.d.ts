import type TypedEventEmitter from "typed-emitter";
import type { CustomResourceDefinition } from "../endpoints";
import type { KubeApi } from "../kube-api";
export interface LegacyAutoRegistration {
    customResourceDefinition: (crd: CustomResourceDefinition) => void;
    kubeApi: (api: KubeApi<any, any>) => void;
}
/**
 * This is used to remove dependency cycles from auto registering of instances
 *
 * - Custom Resource Definitions get their own registered store (will need in the future)
 * - All KubeApi's get auto registered (this should be changed in the future)
 */
declare const autoRegistrationEmitterInjectable: import("@ogre-tools/injectable").Injectable<TypedEventEmitter<LegacyAutoRegistration>, unknown, void>;
export default autoRegistrationEmitterInjectable;
