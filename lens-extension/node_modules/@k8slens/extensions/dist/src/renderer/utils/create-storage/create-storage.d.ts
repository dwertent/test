/**
 * Copyright (c) OpenLens Authors. All rights reserved.
 * Licensed under MIT License. See LICENSE in root directory for more information.
 */
import type { StorageLayer } from "../storageHelper";
import type { JsonObject, JsonValue } from "type-fest";
import type { Logger } from "../../../common/logger";
import type { GetAbsolutePath } from "../../../common/path/get-absolute-path.injectable";
interface Dependencies {
    storage: {
        initialized: boolean;
        loaded: boolean;
        data: Record<string, any>;
    };
    logger: Logger;
    directoryForLensLocalStorage: string;
    readJsonFile: (filePath: string) => Promise<JsonValue>;
    writeJsonFile: (filePath: string, contentObject: JsonObject) => Promise<void>;
    getAbsolutePath: GetAbsolutePath;
    hostedClusterId: string | undefined;
    saveDelay: number;
}
export declare type CreateStorage = <T>(key: string, defaultValue: T) => StorageLayer<T>;
/**
 * Creates a helper for saving data under the "key" intended for window.localStorage
 */
export declare const createStorage: ({ storage, getAbsolutePath, logger, directoryForLensLocalStorage, readJsonFile, writeJsonFile, hostedClusterId, saveDelay, }: Dependencies) => CreateStorage;
export {};
