import type { ExtensionLoading } from "../../../../extensions/extension-loader";
import type { CatalogEntityRegistry } from "../../../api/catalog/entity/registry";
interface Dependencies {
    loadExtensions: () => Promise<ExtensionLoading[]>;
    registerIpcListeners: () => void;
    ipcRenderer: {
        send: (name: string) => void;
    };
    bindProtocolAddRouteHandlers: () => void;
    lensProtocolRouterRenderer: {
        init: () => void;
    };
    catalogEntityRegistry: CatalogEntityRegistry;
}
export declare const initRootFrame: ({ loadExtensions, bindProtocolAddRouteHandlers, lensProtocolRouterRenderer, ipcRenderer, registerIpcListeners, catalogEntityRegistry, }: Dependencies) => (unmountRoot: () => void) => Promise<void>;
export {};
