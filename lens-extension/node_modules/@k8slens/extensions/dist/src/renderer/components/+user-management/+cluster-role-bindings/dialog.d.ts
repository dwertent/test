/**
 * Copyright (c) OpenLens Authors. All rights reserved.
 * Licensed under MIT License. See LICENSE in root directory for more information.
 */
import "./dialog.scss";
import React from "react";
import type { ClusterRole, ClusterRoleBinding, ServiceAccount } from "../../../../common/k8s-api/endpoints";
import type { DialogProps } from "../../dialog";
import { ObservableHashSet } from "../../../utils";
import type { Subject } from "../../../../common/k8s-api/endpoints/types/subject";
export interface ClusterRoleBindingDialogProps extends Partial<DialogProps> {
}
export declare class ClusterRoleBindingDialog extends React.Component<ClusterRoleBindingDialogProps> {
    constructor(props: ClusterRoleBindingDialogProps);
    componentDidMount(): void;
    static open(roleBinding?: ClusterRoleBinding): void;
    static close(): void;
    get clusterRoleOptions(): {
        value: ClusterRole;
        label: string;
    }[];
    get serviceAccountOptions(): {
        value: ServiceAccount;
        label: string;
        isSelected: boolean;
    }[];
    get clusterRoleBinding(): ClusterRoleBinding | undefined;
    get isEditing(): boolean;
    selectedRoleRef: ClusterRole | undefined;
    bindingName: string;
    selectedAccounts: ObservableHashSet<ServiceAccount>;
    selectedUsers: import("mobx").ObservableSet<string>;
    selectedGroups: import("mobx").ObservableSet<string>;
    get selectedBindings(): Subject[];
    onOpen: () => void;
    reset: () => void;
    createBindings: () => Promise<void>;
    renderContents(): JSX.Element;
    render(): JSX.Element;
}
