/**
 * Copyright (c) OpenLens Authors. All rights reserved.
 * Licensed under MIT License. See LICENSE in root directory for more information.
 */
import "./resource-metrics.scss";
import React from "react";
import type { KubeObject } from "../../../common/k8s-api/kube-object";
import type { MetricsTab } from "../chart/options";
import type { MetricData } from "../../../common/k8s-api/endpoints/metrics.api";
export declare type AtLeastOneMetricTab = [MetricsTab, ...MetricsTab[]];
export interface ResourceMetricsProps extends React.HTMLProps<any> {
    tabs: AtLeastOneMetricTab;
    object: KubeObject;
    loader?: () => void;
    interval?: number;
    className?: string;
    metrics: Partial<Record<string, MetricData>> | null | undefined;
}
export interface ResourceMetricsValue {
    object: KubeObject;
    tab: MetricsTab;
    metrics: Partial<Record<string, MetricData>> | null | undefined;
}
export declare const ResourceMetricsContext: React.Context<ResourceMetricsValue | null>;
export declare function ResourceMetrics({ object, loader, interval, tabs, children, className, metrics }: ResourceMetricsProps): JSX.Element;
