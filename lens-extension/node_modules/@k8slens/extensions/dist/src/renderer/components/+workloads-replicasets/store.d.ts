/**
 * Copyright (c) OpenLens Authors. All rights reserved.
 * Licensed under MIT License. See LICENSE in root directory for more information.
 */
import type { GetPodsByOwnerId } from "../+workloads-pods/get-pods-by-owner-id.injectable";
import type { Deployment, ReplicaSet, ReplicaSetApi } from "../../../common/k8s-api/endpoints";
import type { KubeObjectStoreOptions } from "../../../common/k8s-api/kube-object.store";
import { KubeObjectStore } from "../../../common/k8s-api/kube-object.store";
export interface ReplicaSetStoreDependencies {
    getPodsByOwnerId: GetPodsByOwnerId;
}
export declare class ReplicaSetStore extends KubeObjectStore<ReplicaSet, ReplicaSetApi> {
    protected readonly dependencies: ReplicaSetStoreDependencies;
    constructor(dependencies: ReplicaSetStoreDependencies, api: ReplicaSetApi, opts?: KubeObjectStoreOptions);
    getChildPods(replicaSet: ReplicaSet): import("../../../common/k8s-api/endpoints").Pod[];
    getStatuses(replicaSets: ReplicaSet[]): {
        running: number;
        failed: number;
        pending: number;
    };
    getReplicaSetsByOwner(deployment: Deployment): ReplicaSet[];
}
