/**
 * Copyright (c) OpenLens Authors. All rights reserved.
 * Licensed under MIT License. See LICENSE in root directory for more information.
 */
import React from "react";
import type { IPolicyIpBlock, NetworkPolicyPeer, NetworkPolicyPort } from "../../../common/k8s-api/endpoints/network-policy.api";
import { NetworkPolicy } from "../../../common/k8s-api/endpoints/network-policy.api";
import type { KubeObjectDetailsProps } from "../kube-object-details";
import type { LabelMatchExpression, LabelSelector } from "../../../common/k8s-api/kube-object";
export interface NetworkPolicyDetailsProps extends KubeObjectDetailsProps<NetworkPolicy> {
}
export declare class NetworkPolicyDetails extends React.Component<NetworkPolicyDetailsProps> {
    renderIPolicyIpBlock(ipBlock: IPolicyIpBlock | undefined): JSX.Element | null;
    renderMatchLabels(matchLabels: Record<string, string | undefined> | undefined): JSX.Element[] | null;
    renderMatchExpressions(matchExpressions: LabelMatchExpression[] | undefined): JSX.Element[] | null;
    renderIPolicySelector(name: string, selector: LabelSelector | undefined): JSX.Element | null;
    renderNetworkPolicyPeers(name: string, peers: NetworkPolicyPeer[] | undefined): JSX.Element | null;
    renderNetworkPolicyPorts(ports: NetworkPolicyPort[] | undefined): JSX.Element | null;
    render(): JSX.Element | null;
}
