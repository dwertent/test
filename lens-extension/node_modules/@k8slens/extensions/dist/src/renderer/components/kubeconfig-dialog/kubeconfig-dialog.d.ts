/**
 * Copyright (c) OpenLens Authors. All rights reserved.
 * Licensed under MIT License. See LICENSE in root directory for more information.
 */
import React from "react";
import type { ServiceAccount } from "../../../common/k8s-api/endpoints";
import type { DialogProps } from "../dialog";
export interface KubeconfigDialogData {
    title?: React.ReactNode;
    loader: () => Promise<any>;
}
export interface KubeConfigDialogProps extends Partial<DialogProps> {
}
export declare class KubeConfigDialog extends React.Component<KubeConfigDialogProps> {
    config: string;
    constructor(props: KubeConfigDialogProps);
    static open(data: KubeconfigDialogData): void;
    static close(): void;
    close: () => void;
    onOpen: (data: KubeconfigDialogData) => void;
    loadConfig(data: KubeconfigDialogData): Promise<void>;
    copyToClipboard: () => void;
    download: () => void;
    renderContents(data: KubeconfigDialogData): JSX.Element;
    render(): JSX.Element;
}
export declare function openServiceAccountKubeConfig(account: ServiceAccount): void;
