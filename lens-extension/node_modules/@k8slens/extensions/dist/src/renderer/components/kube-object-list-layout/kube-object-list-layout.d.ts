/**
 * Copyright (c) OpenLens Authors. All rights reserved.
 * Licensed under MIT License. See LICENSE in root directory for more information.
 */
import "./kube-object-list-layout.scss";
import React from "react";
import type { KubeJsonApiDataFor, KubeObject } from "../../../common/k8s-api/kube-object";
import type { ItemListLayoutProps } from "../item-object-list/list-layout";
import type { KubeObjectStore } from "../../../common/k8s-api/kube-object.store";
import type { SubscribableStore } from "../../kube-watch-api/kube-watch-api";
import type { KubeApi } from "../../../common/k8s-api/kube-api";
export interface KubeObjectListLayoutProps<K extends KubeObject, A extends KubeApi<K, D>, D extends KubeJsonApiDataFor<K>> extends Omit<ItemListLayoutProps<K, false>, "getItems" | "dependentStores" | "preloadStores"> {
    items?: K[];
    getItems?: () => K[];
    store: KubeObjectStore<K, A, D>;
    dependentStores?: SubscribableStore[];
    subscribeStores?: boolean;
}
export declare const KubeObjectListLayout: <K extends KubeObject<import("../../../common/k8s-api/kube-object").KubeObjectMetadata<import("../../../common/k8s-api/kube-object").KubeObjectScope>, unknown, unknown>, A extends KubeApi<K, D>, D extends KubeJsonApiDataFor<K> = KubeJsonApiDataFor<K>>(props: KubeObjectListLayoutProps<K, A, D>) => React.ReactElement;
