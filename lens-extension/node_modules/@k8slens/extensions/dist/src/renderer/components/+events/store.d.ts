/**
 * Copyright (c) OpenLens Authors. All rights reserved.
 * Licensed under MIT License. See LICENSE in root directory for more information.
 */
import type { KubeObjectStoreOptions } from "../../../common/k8s-api/kube-object.store";
import { KubeObjectStore } from "../../../common/k8s-api/kube-object.store";
import type { KubeEvent, KubeEventApi } from "../../../common/k8s-api/endpoints/events.api";
import type { KubeObject } from "../../../common/k8s-api/kube-object";
import type { GetPodById } from "../+workloads-pods/get-pod-by-id.injectable";
export interface EventStoreDependencies {
    getPodById: GetPodById;
}
export declare class EventStore extends KubeObjectStore<KubeEvent, KubeEventApi> {
    protected readonly dependencies: EventStoreDependencies;
    constructor(dependencies: EventStoreDependencies, api: KubeEventApi, opts?: KubeObjectStoreOptions);
    protected bindWatchEventsUpdater(): void;
    protected sortItems(items: KubeEvent[]): KubeEvent[];
    getEventsByObject(obj: KubeObject): KubeEvent[];
    getWarnings(): KubeEvent[];
    getWarningsCount(): number;
}
