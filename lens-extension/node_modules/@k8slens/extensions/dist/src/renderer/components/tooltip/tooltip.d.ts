/**
 * Copyright (c) OpenLens Authors. All rights reserved.
 * Licensed under MIT License. See LICENSE in root directory for more information.
 */
import "./tooltip.scss";
import React from "react";
import type { IClassName } from "../../utils";
export declare enum TooltipPosition {
    TOP = "top",
    BOTTOM = "bottom",
    LEFT = "left",
    RIGHT = "right",
    TOP_LEFT = "top_left",
    TOP_RIGHT = "top_right",
    BOTTOM_LEFT = "bottom_left",
    BOTTOM_RIGHT = "bottom_right"
}
export interface TooltipProps {
    targetId: string;
    tooltipOnParentHover?: boolean;
    visible?: boolean;
    offset?: number;
    usePortal?: boolean;
    preferredPositions?: TooltipPosition | TooltipPosition[];
    className?: IClassName;
    formatters?: TooltipContentFormatters;
    style?: React.CSSProperties;
    children?: React.ReactNode;
}
export interface TooltipContentFormatters {
    narrow?: boolean;
    warning?: boolean;
    small?: boolean;
    nowrap?: boolean;
    tableView?: boolean;
}
export declare class Tooltip extends React.Component<TooltipProps> {
    static defaultProps: object;
    elem: HTMLDivElement | null;
    activePosition?: TooltipPosition;
    isVisible: boolean;
    isContentVisible: boolean;
    constructor(props: TooltipProps);
    get targetElem(): HTMLElement | null;
    get hoverTarget(): HTMLElement | null;
    componentDidMount(): void;
    componentDidUpdate(): void;
    componentWillUnmount(): void;
    protected onEnterTarget(): void;
    protected onLeaveTarget(): void;
    refreshPosition(): void;
    protected setPosition(elem: HTMLDivElement, pos: {
        left: number;
        top: number;
    }): void;
    protected getPosition(position: TooltipPosition, tooltipBounds: DOMRect, targetBounds: DOMRect): {
        left: number;
        top: number;
        right: number;
        bottom: number;
    };
    render(): JSX.Element | null;
}
