/**
 * Copyright (c) OpenLens Authors. All rights reserved.
 * Licensed under MIT License. See LICENSE in root directory for more information.
 */
import type { KubeObjectStoreOptions } from "../../../common/k8s-api/kube-object.store";
import { KubeObjectStore } from "../../../common/k8s-api/kube-object.store";
import type { Job, JobApi } from "../../../common/k8s-api/endpoints/job.api";
import type { CronJob, Pod } from "../../../common/k8s-api/endpoints";
import type { GetPodsByOwnerId } from "../+workloads-pods/get-pods-by-owner-id.injectable";
interface Dependencies {
    getPodsByOwnerId: GetPodsByOwnerId;
}
export declare class JobStore extends KubeObjectStore<Job, JobApi> {
    protected readonly dependencies: Dependencies;
    constructor(dependencies: Dependencies, api: JobApi, opts?: KubeObjectStoreOptions);
    getChildPods(job: Job): Pod[];
    getJobsByOwner(cronJob: CronJob): Job[];
    getStatuses(jobs?: Job[]): {
        succeeded: number;
        running: number;
        failed: number;
        pending: number;
    };
}
export {};
