/**
 * Copyright (c) OpenLens Authors. All rights reserved.
 * Licensed under MIT License. See LICENSE in root directory for more information.
 */
import type { ReactNode } from "react";
import React from "react";
import type { TooltipProps } from "./tooltip";
import type { SingleOrMany } from "../../utils";
export interface TooltipDecoratorProps {
    tooltip?: ReactNode | Omit<TooltipProps, "targetId">;
    /**
     * forces tooltip to detect the target's parent for mouse events. This is
     * useful for displaying tooltips even when the target is "disabled"
     */
    tooltipOverrideDisabled?: boolean;
    id?: string;
    children?: SingleOrMany<React.ReactNode>;
}
export declare function withTooltip<TargetProps>(Target: TargetProps extends Pick<TooltipDecoratorProps, "id" | "children"> ? React.FunctionComponent<TargetProps> : never): React.FunctionComponent<TargetProps & TooltipDecoratorProps>;
