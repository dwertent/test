/**
 * Copyright (c) OpenLens Authors. All rights reserved.
 * Licensed under MIT License. See LICENSE in root directory for more information.
 */
import type { KubeObjectStoreOptions } from "../../../common/k8s-api/kube-object.store";
import { KubeObjectStore } from "../../../common/k8s-api/kube-object.store";
import type { CustomResourceDefinition, CustomResourceDefinitionApi } from "../../../common/k8s-api/endpoints/custom-resource-definition.api";
import type { KubeObject } from "../../../common/k8s-api/kube-object";
import type TypedEventEmitter from "typed-emitter";
import type { LegacyAutoRegistration } from "../../../common/k8s-api/api-manager/auto-registration-emitter.injectable";
export interface CustomResourceDefinitionStoreDependencies {
    readonly autoRegistration: TypedEventEmitter<LegacyAutoRegistration>;
}
export declare class CustomResourceDefinitionStore extends KubeObjectStore<CustomResourceDefinition, CustomResourceDefinitionApi> {
    protected readonly dependencies: CustomResourceDefinitionStoreDependencies;
    constructor(dependencies: CustomResourceDefinitionStoreDependencies, api: CustomResourceDefinitionApi, opts?: KubeObjectStoreOptions);
    protected sortItems(items: CustomResourceDefinition[]): CustomResourceDefinition[];
    get groups(): Record<string, CustomResourceDefinition[]>;
    getByGroup(group: string, pluralName: string): CustomResourceDefinition | undefined;
    getByObject(obj: KubeObject): CustomResourceDefinition | null | undefined;
}
