/**
 * Copyright (c) OpenLens Authors. All rights reserved.
 * Licensed under MIT License. See LICENSE in root directory for more information.
 */
import "./add-secret-dialog.scss";
import React from "react";
import type { DialogProps } from "../dialog";
import { SecretType } from "../../../common/k8s-api/endpoints";
export interface AddSecretDialogProps extends Partial<DialogProps> {
}
interface SecretTemplateField {
    key: string;
    value?: string;
    required?: boolean;
}
interface SecretTemplate {
    [field: string]: SecretTemplateField[] | undefined;
    annotations?: SecretTemplateField[];
    labels?: SecretTemplateField[];
    data?: SecretTemplateField[];
}
declare type ISecretField = keyof SecretTemplate;
export declare class AddSecretDialog extends React.Component<AddSecretDialogProps> {
    constructor(props: AddSecretDialogProps);
    static open(): void;
    static close(): void;
    private secretTemplate;
    secret: Partial<Record<SecretType, SecretTemplate>>;
    name: string;
    namespace: string;
    type: SecretType;
    reset: () => void;
    close: () => void;
    private getDataFromFields;
    createSecret: () => Promise<void>;
    private getFields;
    addField: (field: ISecretField) => void;
    removeField: (field: ISecretField, index: number) => void;
    renderFields(field: ISecretField): JSX.Element;
    render(): JSX.Element;
}
export {};
