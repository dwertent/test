/**
 * Copyright (c) OpenLens Authors. All rights reserved.
 * Licensed under MIT License. See LICENSE in root directory for more information.
 */
import type { HelmChart } from "../../../common/k8s-api/endpoints/helm-charts.api";
import { ItemStore } from "../../../common/item.store";
export interface ChartVersion {
    repo: string;
    version: string;
}
export declare class HelmChartStore extends ItemStore<HelmChart> {
    versions: import("mobx").ObservableMap<string, ChartVersion[]>;
    constructor();
    loadAll(): Promise<any>;
    getByName(name: string, repo?: string): HelmChart | undefined;
    protected sortVersions: (versions: ChartVersion[]) => {
        repo: string;
        version: string;
    }[];
    getVersions(chartName: string, force?: boolean): Promise<ChartVersion[]>;
    reset(): void;
    /**
     * @deprecated Not supported
     */
    removeItems(): Promise<void>;
}
export declare const helmChartStore: HelmChartStore;
