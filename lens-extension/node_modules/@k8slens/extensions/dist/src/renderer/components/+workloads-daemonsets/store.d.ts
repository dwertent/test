/**
 * Copyright (c) OpenLens Authors. All rights reserved.
 * Licensed under MIT License. See LICENSE in root directory for more information.
 */
import type { GetPodsByOwnerId } from "../+workloads-pods/get-pods-by-owner-id.injectable";
import type { DaemonSet, DaemonSetApi, Pod } from "../../../common/k8s-api/endpoints";
import type { KubeObjectStoreOptions } from "../../../common/k8s-api/kube-object.store";
import { KubeObjectStore } from "../../../common/k8s-api/kube-object.store";
export interface DaemonSetStoreDependencies {
    readonly getPodsByOwnerId: GetPodsByOwnerId;
}
export declare class DaemonSetStore extends KubeObjectStore<DaemonSet, DaemonSetApi> {
    protected readonly dependencies: DaemonSetStoreDependencies;
    constructor(dependencies: DaemonSetStoreDependencies, api: DaemonSetApi, opts?: KubeObjectStoreOptions);
    getChildPods(daemonSet: DaemonSet): Pod[];
    getStatuses(daemonSets?: DaemonSet[]): {
        running: number;
        failed: number;
        pending: number;
    };
}
