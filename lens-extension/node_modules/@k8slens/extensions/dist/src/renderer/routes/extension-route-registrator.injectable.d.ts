import type { LensRendererExtension } from "../../extensions/lens-renderer-extension";
import React from "react";
import type { IComputedValue } from "mobx";
declare const extensionRouteRegistratorInjectable: import("@ogre-tools/injectable").Injectable<(ext: import("../../extensions/lens-extension").LensExtension<import("../../extensions/lens-extension-set-dependencies").LensExtensionDependencies>) => (import("@ogre-tools/injectable").Injectable<{
    path: string;
    clusterFrame: boolean;
    isEnabled: IComputedValue<boolean>;
    extension: LensRendererExtension;
}, import("../../common/front-end-routing/front-end-route-injection-token").Route<unknown>, void> | import("@ogre-tools/injectable").Injectable<{
    route: {
        path: string;
        clusterFrame: boolean;
        isEnabled: IComputedValue<boolean>;
        extension: LensRendererExtension;
    };
    Component: () => JSX.Element;
}, {
    route: import("../../common/front-end-routing/front-end-route-injection-token").Route<unknown>;
    Component: React.ElementType<any>;
}, void>)[], (extension: import("../../extensions/lens-extension").LensExtension<import("../../extensions/lens-extension-set-dependencies").LensExtensionDependencies>) => import("@ogre-tools/injectable").Injectable<any, any, any>[], void>;
export default extensionRouteRegistratorInjectable;
